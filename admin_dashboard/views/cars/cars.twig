<style>
    .restrict-height {
        height: 30%;
        transition: height 0.3s ease-in-out;
    }

    .car-image {
        .mask {
            transition: opacity 0.3s ease-in-out;
        }

        &:hover {
            .mask {
                opacity: 0.4;
            }
            animation: expandBackgroundSize 0.3s ease-in-out forwards;
        }

        &:not(:hover) {
            animation: shrinkBackgroundSize 0.3s ease-in-out forwards;
        }
    }

    @keyframes expandBackgroundSize {
        0% {
            background-size: 100% auto;
        }
        100% {
            background-size: 105% auto;
        }
    }

    @keyframes shrinkBackgroundSize {
        0% {
            background-size: 105% auto;
        }
        100% {
            background-size: 100% auto;
        }
    }

    .draggable {
        cursor: move;
    }
</style>

<div class="container-fluid py-4">
    <button onclick="changeLayout()" class="btn btn-primary">Change Layout</button>
    <div class="row mt-4">
    {% for car in cars %}
        <div class="draggable col-lg-5 mt-3">
            <div class="card h-100 p-3">
                <div class="overflow-hidden position-relative border-radius-lg bg-cover h-100 car-image" style="background-image: linear-gradient(to bottom left, rgba(0,0,0,0), rgba(0,0,0,1)), url('{{car.image}}'); background-position: center bottom ;">
                    <span class="mask bg-gradient-dark"></span>
                    <div class="card-body position-relative z-index-1 d-flex flex-column h-100 p-3">
                    <h5 class="text-white font-weight-bolder mb-4 pt-2">{{car.name}}</h5>
                    <p class="text-white">{{car.description}}</p>
                        <a class="text-white text-sm font-weight-bold mb-0 icon-move-right mt-auto view-link" href="#">
                        View
                        <i class="fas fa-arrow-right text-sm ms-1" aria-hidden="true"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    {% endfor %}
    </div>
</div>

<script>
    const draggables = document.querySelectorAll('.draggable');
    draggables.forEach(draggable => {
        const draggie = new Draggabilly(draggable);
    });

    function changeLayout() {
        const cards = document.querySelectorAll('.draggable');
        let heightOffset = cards[0].offsetHeight + 20;
        const coordinates = [];

        //0: {x: 95, y: 313.796875}
        //1: {x: 615, y: 313.796875}
        //2: {x: 95, y: 517.296875}
        //3: {x: 615, y: 517.296875}
        //4: {x: 95, y: 720.796875}

        // x:: 615-95 = 520
        // y:: 517.296875-313.796875 = 203 every 2nd card

        cards.forEach(card => {
            const rect = card.getBoundingClientRect();
            coordinates.push({
                x: rect.x,
                y: rect.y,
                position: 'left'
            });
        });

        cards.forEach((card, index) => {
            const rect = card.getBoundingClientRect();
            if (index == 0) return;
            if (rect.x == coordinates[0].x) coordinates[index].position = 'left';
            else coordinates[index].position = 'right';
        });
        console.log(coordinates);

        let rightCardBeforeLast;
        for (let i = cards.length - 2; i >= 0; i--) {
            if (coordinates[i].position === 'right') {
                rightCardBeforeLast = i;
                break;
            }
        }

        cards.forEach((card, index) => {
            if (index == 0) return;
            if (coordinates[index].position == 'right') {
                card.style.left = (cards[0].offsetLeft - coordinates[index].x) + 'px';
                card.style.top = heightOffset + 'px';
                //if (index != rightCardBeforeLast) heightOffset += heightOffset;
                heightOffset += heightOffset;
            } else {
                card.style.top = (heightOffset - (cards[0].offsetHeight + 20)) + 'px';
            }
        });
    }

</script>