<link rel="stylesheet" href="/admin_dashboard/views/orders/orders.css">
<div class="container mb-5">
    <div class="row input-panel" style="position: sticky; top: 0; z-index: 99; padding-bottom: 30px" id="inputPanel">
        <div class="col-5" id="infoGroup">
            <a href="/admin_dashboard/index.php/orders/add/" class="btn btn-primary mt-3"><span class="fas fa-plus"></span>&nbsp;Add Order</a>

            <ul class="nav nav-tabs mt-3" id="myTabs" role="tablist" style="margin-bottom: 0px !important">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="tabItem1" data-bs-toggle="tab" data-bs-target="#tabContent1" type="button" role="tab" aria-controls="tabContent1" aria-selected="true">Orders</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="tabItem2" data-bs-toggle="tab" data-bs-target="#tabContent2" type="button" role="tab" aria-controls="tabContent2" aria-selected="false">Cars</button>
                </li>
            </ul>

            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="tabContent1" role="tabpanel" aria-labelledby="tabItem1">
                    <ul class="card list-group">
                        <li class="list-group-item d-flex justify-content-between">
                            <span class="badge bg-primary rounded-pill fade-in">Total Orders</span>
                            <span class="badge bg-primary rounded-pill fade-in" id="ordersThisMonth"></span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span class="">Legend</span>
                            <div id="carMapping"></div>
                        </li>
                    </ul>
                </div>
                <div class="tab-pane fade" id="tabContent2" role="tabpanel" aria-labelledby="tabItem2">
                    <ul class="card list-group">
                        <li class="list-group-item d-flex justify-content-between">
                            <span class="badge bg-primary rounded-pill fade-in">Available Cars</span>
                            <span class="badge bg-primary rounded-pill fade-in" id="availableCars"></span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span class="">Legend</span>
                            <div id="availableCarMapping"></div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-5 ms-auto" id="inputGroup">
            <ul class="card list-group">
                <li class="list-group-item d-flex justify-content-between">
                    <input type="text" id="autoComplete" class="form-control fade-in" placeholder="Search by car name">
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <input type="date" id="datepicker" class="form-control fade-in">
                </li>
            </ul>
            <div class="d-flex mt-3">
                <button class="btn btn-primary me-2" id="searchBtn">Search</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 mt-5">
            <div id="calendar" style="margin-bottom: 150px;"></div>
        </div>
        <div class="col-3">
            <button class="btn btn-primary rounded-circle d-flex align-items-center justify-content-center" id="goToTopBtn" style="position: fixed; opacity: 0; bottom: 20px; right: 20px; z-index: 99; width: 50px; height: 50px;">
                <i class="fas fa-arrow-up"></i>
            </button>
        </div>
    </div>
</div>

<script src="/admin_dashboard/views/orders/orders.js"></script>
<script>
    let orders = [
        {% for order in orders %}
            {
            orderId: '{{ order.id }}',
            carId: '{{ order.carId }}',
            renterName: '{{ order.firstname }} {{ order.lastname }}',
            car: '{{ order.name }}',
            startDate: '{{ order.rental_date|date("M d, Y") }}',
            endDate: '{{ order.rental_date|date_modify('+' ~ order.rental_duration ~ ' days')|date('M d, Y') }}',
            }{% if not loop.last %},{% endif %}
        {% endfor %}
    ];

    let cars = {{ cars|json_encode|raw }};
    let filteredCars = [];
    cars.forEach(car => {
        filteredCars.push(car.name);
    });

    const autoCompleteJS = new autoComplete({
        selector: "#autoComplete",
        data: {
            src: filteredCars,
        },
        resultsList: {
            element: (list, data) => {
                const message = document.createElement("div");
                if (!data.results.length) {
                    message.setAttribute("class", "no_result");
                    message.innerHTML = `<span>Found no results for "${data.query}"</span>`;
                    list.prepend(message);
                }
            },
        },
        events: {
            input: {
                selection: (event) => {
                    const selection = event.detail.selection.value;
                    autoCompleteJS.input.value = selection;
                },
            },
        },
    });
    
    function generateUniqueColor(id) {
        var hue = (id * 137.508) % 360;
        var color = 'hsl(' + hue + ', 70%, 60%)';
        return color;
    }
</script>
<script src="/admin_dashboard/views/orders/generateCalendar.js"></script>
<script>
    window.onscroll = function () {
        let inputPanel = document.getElementById('inputPanel');
        let inputGroup = document.getElementById('inputGroup');
        let infoGroup = document.getElementById('infoGroup');

        let goToTopBtn = document.getElementById('goToTopBtn');
        goToTopBtn.onclick = function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        };

        var threshold = 100;
        if (window.pageYOffset > threshold) {
            let opacity = (window.pageYOffset - threshold) / 100;
            if (opacity > 0.5) opacity = 0.5;
            inputPanel.style.paddingTop = Math.min(window.pageYOffset - threshold, 20) + 'px';
            inputPanel.style.backdropFilter = `blur(${opacity * 10}px)`;
            goToTopBtn.style.opacity = 1;
            goToTopBtn.style.transform = `translateY(-${Math.min(window.pageYOffset - threshold, 20)}px)`;
        } else {
            let opacity = (window.pageYOffset - threshold) / 100;
            inputPanel.style.paddingTop = '0px';
            inputPanel.style.backdropFilter = `blur(${opacity * 10}px)`;
            goToTopBtn.style.opacity = 0;
        }
    }

    window.onload = function () {
		$('[data-toggle="popover"]').popover({
			html: true,
			trigger: 'click',
            placement: 'bottom',
			content: function () {
                let order = document.getElementById($(this).attr("id"));
                //order.scrollIntoView({behavior: "smooth", block: "center", inline: "nearest"});
				return $(this).attr("data-content");
			},
			template: '<div class="popover card" style="z-index:99" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body card-body"></div></div>',
		}).on('shown.bs.popover', function () {
			$('[data-toggle="popover"]').not(this).popover('hide');
		});

        let searchBtn = document.getElementById("searchBtn");
        let datepicker = document.getElementById("datepicker");
        datepicker.style.transition = "width 0.1s ease-in-out"; 
        datepicker.style.width = "100%";

        datepicker.addEventListener("change", function () {
            if (!isNaN(Date.parse(datepicker.value)) && document.getElementById("addButton") === null) {
                hasBeenSelected = true;
                datepicker.style.width = "90%";

                setTimeout(function () {
                    let parentElement = datepicker.parentElement;
                    let addButton = document.createElement("button");
                    addButton.setAttribute("class", "btn btn-primary fade-in");
                    addButton.setAttribute("id", "addButton");

                    addButton.style.paddingTop = "5px";
                    addButton.style.paddingBottom = "5px";
                    addButton.style.paddingLeft = "15px";
                    addButton.style.paddingRight = "15px";
                    addButton.style.marginBottom = "0px";
                    addButton.style.marginLeft = "10px";

                    addButton.innerHTML = "+";
                    addButton.addEventListener("click", function () {
                        datepicker.style.width = "45%";

                        if(document.getElementById("additionalDatepicker") !== null) {
                            document.getElementById("additionalDatepicker").remove();
                            addButton.innerHTML = "+";
                            addButton.removeAttribute("class");
                            addButton.setAttribute("class", "btn btn-primary fade-in");
                            datepicker.style.width = "90%";
                        } else {
                            let newDatepicker = document.createElement("input");
                            newDatepicker.setAttribute("id", "additionalDatepicker");
                            newDatepicker.setAttribute("type", "date");
                            newDatepicker.setAttribute("class", "form-control fade-in");
                            newDatepicker.style.width = "45%";
                            newDatepicker.style.marginLeft = "10px";

                            newDatepicker.addEventListener("change", function() {
                                if (Date.parse(newDatepicker.value) <= Date.parse(datepicker.value)) {
                                    newDatepicker.style.border = "1px solid red";
                                    searchBtn.setAttribute("disabled", "true");
                                } else {
                                    newDatepicker.style.border = "1px solid #ced4da";
                                    searchBtn.removeAttribute("disabled");
                                }
                            });

                            parentElement.insertBefore(newDatepicker, addButton);
                            addButton.removeAttribute("class");
                            addButton.setAttribute("class", "btn btn-secondary");
                            addButton.innerHTML = "-";
                        }
                    });
                    parentElement.appendChild(addButton);
                }, 100);
            } else {
                try {
                    if (document.getElementById("additionalDatepicker").value === "") {
                        document.getElementById("addButton").remove();
                        document.getElementById("additionalDatepicker").remove();
                        datepicker.style.width = "100%";
                    }
                } catch (error) {}
            }
        });

        function dimOrder(id) {
            try {
                let order = document.querySelectorAll(`[id='order-${id}']`);
                order.forEach(o => {
                    o.style.opacity = "0.2";
                    o.style.transition = "opacity 0.5s ease-in-out";
                });
            } catch (error) {
                console.log(error);
            };
        }

        function undimOrders() {
            try {
                let order = document.querySelectorAll(`[id^='order-']`);
                order.forEach(o => {
                    o.style.opacity = "1";
                    o.style.transition = "opacity 0.5s ease-in-out";
                });
            } catch (error) {};
        }

        function populateAvailableCars(startDate, endDate) {
            document.getElementById('availableCarMapping').innerHTML = '';
            ordersThisMonth.availableCars(startDate, endDate).then((result) => {
                document.getElementById('availableCars').innerHTML = result.length;
                var carIds = [];
                result.forEach(order => {
                    if (!carIds.includes(order.id)) carIds.push(order.id);
                });

                if (carIds.length == 0) {
                    document.getElementById('availableCarMapping').innerHTML = '<p>No data</p>';
                } else {
                    carIds.forEach(carId => {
                        ordersThisMonth.getCar(carId).then((car) => {
                            let newDiv = document.getElementById('availableCarMapping').appendChild(document.createElement('div'));
                            newDiv.innerHTML = `
                                <i class="fas fa-circle" style="color: ${generateUniqueColor(carId)}"></i>
                                <span>${car[0].name}</span>
                            `;
                        });
                    });
                }
            });
        }
        
        searchBtn.addEventListener("click", function() {
            undimOrders();
            var filterCar = "";
            var filterStartDate = "";
            var filterEndDate = "";
            try {
                filterCar = document.getElementById("autoComplete").value ? document.getElementById("autoComplete").value : "";
                filterStartDate = datepicker.value ? datepicker.value : "";
                filterEndDate = document.getElementById("additionalDatepicker") ? document.getElementById("additionalDatepicker").value : "";
            } catch (error) {}

            if (filterCar == "") {
                document.getElementById("autoComplete").style.border = "1px solid red";
                setTimeout(function() {
                    document.getElementById("autoComplete").style.border = "1px solid #ced4da";
                }, 500);

                if (filterStartDate != "") {
                    populateAvailableCars(filterStartDate, filterEndDate);
                    alertify.warning('No car name specified, filtering available cars instead')
                }

                return;
            }
            if (filterStartDate == "") {
                datepicker.style.border = "1px solid red";
                setTimeout(function() {
                    datepicker.style.border = "1px solid #ced4da";
                }, 500);
                if (filterCar != "") {
                    orders.forEach(order => {
                        if (!(order.car.toLowerCase().includes(filterCar.toLowerCase()))) {
                            dimOrder(order.orderId);
                        }
                    })
                    alertify.warning(`No date specified. Filtering for ${filterCar} instead.`);
                }
                return;
            }

            orders.forEach(order => {
                let orderStartDate = new Date(order.startDate).setHours(0, 0, 0, 0);
                let orderEndDate = new Date(order.endDate).setHours(0, 0, 0, 0);
                let startDate = new Date(filterStartDate).setHours(0, 0, 0, 0);
                let endDate = filterEndDate !== "" ? new Date(filterEndDate).setHours(0, 0, 0, 0) : false;

                if (endDate === false) {
                    if (!(order.car.toLowerCase().includes(filterCar.toLowerCase()) && orderStartDate == startDate)) {
                        dimOrder(order.orderId);
                    }
                } else {
                    if (!(order.car.toLowerCase().includes(filterCar.toLowerCase()) && orderStartDate >= startDate && orderEndDate <= endDate)) {
                        dimOrder(order.orderId);
                    }
                }
            });
        });
    }
</script>